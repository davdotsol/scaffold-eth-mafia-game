{
  "address": "0x5D599A3C94eAAD8E0fCA28A25b09235Bd0f45966",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AccusationCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "GameContinue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "GameWon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum MafiaGame.Phase",
          "name": "newPhase",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "story",
          "type": "string"
        }
      ],
      "name": "PhaseChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accuser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "accused",
          "type": "address"
        }
      ],
      "name": "PlayerAccused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "eliminatedPlayer",
          "type": "address"
        }
      ],
      "name": "PlayerEliminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MafiaGame.Role",
              "name": "role",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "alive",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct MafiaGame.Player",
          "name": "player",
          "type": "tuple"
        }
      ],
      "name": "PlayerJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum MafiaGame.Role",
          "name": "role",
          "type": "uint8"
        }
      ],
      "name": "RoleAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "accused",
          "type": "address"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "eliminatedPlayer",
          "type": "address"
        }
      ],
      "name": "VotingCompleted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accusationReasons",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accusations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accusationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accused",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "accusePlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accusedPlayers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkWin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPhase",
      "outputs": [
        {
          "internalType": "enum MafiaGame.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cycleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eliminatePlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eliminatedAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameStarted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accused",
          "type": "address"
        }
      ],
      "name": "getAccusationReasons",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAccusedPlayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEliminatedPlayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investigated",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mafiaAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mafiaCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mayor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextPhase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phaseStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "playerAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playerCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playerToEliminate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum MafiaGame.Role",
          "name": "role",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "alive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "story",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accused",
          "type": "address"
        }
      ],
      "name": "voteForElimination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingCompleted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe5161633534912dbe4e3d0bfc0043a91f4edb0795cbcae266d038c7247f64e05",
  "receipt": {
    "to": null,
    "from": "0xd4D907DB54A63E209ad60846a6E4b9137BB57Fb0",
    "contractAddress": "0x5D599A3C94eAAD8E0fCA28A25b09235Bd0f45966",
    "transactionIndex": 15,
    "gasUsed": "1908290",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x69d3d6a4dc9a93528cb7a5ae92378ba57a027e6b4dbebf97f8b5428f04408eca",
    "transactionHash": "0xe5161633534912dbe4e3d0bfc0043a91f4edb0795cbcae266d038c7247f64e05",
    "logs": [],
    "blockNumber": 6618102,
    "cumulativeGasUsed": "4681156",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0f7e1550389bd9fe043059ba66d837d1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AccusationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameContinue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"GameWon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum MafiaGame.Phase\",\"name\":\"newPhase\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"story\",\"type\":\"string\"}],\"name\":\"PhaseChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accuser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accused\",\"type\":\"address\"}],\"name\":\"PlayerAccused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eliminatedPlayer\",\"type\":\"address\"}],\"name\":\"PlayerEliminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MafiaGame.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"alive\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct MafiaGame.Player\",\"name\":\"player\",\"type\":\"tuple\"}],\"name\":\"PlayerJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MafiaGame.Role\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"RoleAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accused\",\"type\":\"address\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eliminatedPlayer\",\"type\":\"address\"}],\"name\":\"VotingCompleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accusationReasons\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accusations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accusationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accused\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"accusePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accusedPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPhase\",\"outputs\":[{\"internalType\":\"enum MafiaGame.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cycleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eliminatePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eliminatedAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameStarted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accused\",\"type\":\"address\"}],\"name\":\"getAccusationReasons\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccusedPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEliminatedPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investigated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mafiaAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mafiaCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mayor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerToEliminate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MafiaGame.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"alive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"story\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accused\",\"type\":\"address\"}],\"name\":\"voteForElimination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MafiaGame.sol\":\"MafiaGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MafiaGame.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract MafiaGame {\\n\\tenum Role {\\n\\t\\tNone,\\n\\t\\tMafia,\\n\\t\\tDoctor,\\n\\t\\tDetective,\\n\\t\\tTownsperson\\n\\t}\\n\\n\\tstruct Player {\\n\\t\\taddress addr;\\n\\t\\tRole role;\\n\\t\\tbool alive;\\n\\t}\\n\\n\\tenum Phase {\\n\\t\\tDay,\\n\\t\\tNight\\n\\t}\\n\\n\\tuint public playerCount;\\n\\tuint public mafiaCount;\\n\\tuint public phaseStartTime;\\n\\tuint public cycleCount; // Added to count the number of cycles\\n\\tPhase public currentPhase;\\n\\tmapping(address => Player) public players;\\n\\tmapping(address => address) public accusations;\\n\\tmapping(address => uint) public votes;\\n\\tmapping(address => bool) public hasVoted;\\n\\tmapping(address => string[]) public accusationReasons; // New mapping to store reasons\\n\\taddress[] public accusedPlayers;\\n\\taddress[] public playerAddresses;\\n\\taddress[] public mafiaAddresses;\\n\\taddress[] public eliminatedAddresses;\\n\\taddress public mayor;\\n\\taddress public target;\\n\\taddress public saved;\\n\\taddress public investigated;\\n\\tstring public story;\\n\\tbool public gameStarted;\\n\\tbool public votingCompleted;\\n\\tuint public votesCast;\\n\\taddress public playerToEliminate;\\n\\tuint public accusationsCount;\\n\\n\\tmodifier onlyMayor() {\\n\\t\\trequire(msg.sender == mayor, \\\"Only the mayor can perform this action\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlyAlive() {\\n\\t\\trequire(\\n\\t\\t\\tplayers[msg.sender].alive,\\n\\t\\t\\t\\\"You are dead and cannot perform this action\\\"\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\tevent PlayerJoined(Player player);\\n\\tevent RoleAssigned(address indexed player, Role role);\\n\\tevent PhaseChanged(Phase newPhase, string story);\\n\\tevent PlayerAccused(address indexed accuser, address indexed accused);\\n\\tevent VoteCast(address indexed voter, address indexed accused);\\n\\tevent VotingCompleted(address indexed eliminatedPlayer);\\n\\tevent PlayerEliminated(address indexed eliminatedPlayer);\\n\\tevent GameWon(string message);\\n\\tevent GameContinue();\\n\\tevent AccusationCompleted();\\n\\n\\tconstructor() {\\n\\t\\tmayor = msg.sender;\\n\\t\\tcurrentPhase = Phase.Night;\\n\\t\\tphaseStartTime = block.timestamp;\\n\\t\\tcycleCount = 0; // Initialize cycleCount\\n\\t}\\n\\n\\tfunction joinGame() public {\\n\\t\\trequire(!gameStarted, \\\"The game has already started\\\");\\n\\t\\trequire(\\n\\t\\t\\tplayers[msg.sender].addr == address(0),\\n\\t\\t\\t\\\"Player already joined\\\"\\n\\t\\t);\\n\\n\\t\\tplayers[msg.sender] = Player({\\n\\t\\t\\taddr: msg.sender,\\n\\t\\t\\trole: Role.None,\\n\\t\\t\\talive: true\\n\\t\\t});\\n\\n\\t\\tplayerAddresses.push(msg.sender);\\n\\t\\tplayerCount++;\\n\\t\\temit PlayerJoined(players[msg.sender]);\\n\\t}\\n\\n\\tfunction startGame() public onlyMayor {\\n\\t\\trequire(\\n\\t\\t\\tplayerCount >= 4,\\n\\t\\t\\t\\\"Minimum 4 players required to start the game\\\"\\n\\t\\t);\\n\\t\\trequire(!gameStarted, \\\"The game has already started\\\");\\n\\n\\t\\tgameStarted = true;\\n\\t\\tuint mafiaNum = playerCount / 4;\\n\\t\\tmafiaCount = mafiaNum;\\n\\n\\t\\t// Shuffle players for random role assignment\\n\\t\\tfor (uint i = 0; i < playerCount; i++) {\\n\\t\\t\\tuint randomIndex = i +\\n\\t\\t\\t\\t(uint(\\n\\t\\t\\t\\t\\tkeccak256(\\n\\t\\t\\t\\t\\t\\tabi.encodePacked(block.timestamp, block.difficulty)\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t) % (playerCount - i));\\n\\t\\t\\taddress temp = playerAddresses[i];\\n\\t\\t\\tplayerAddresses[i] = playerAddresses[randomIndex];\\n\\t\\t\\tplayerAddresses[randomIndex] = temp;\\n\\t\\t}\\n\\n\\t\\t// Assign roles\\n\\t\\tfor (uint i = 0; i < playerCount; i++) {\\n\\t\\t\\tif (i < mafiaNum) {\\n\\t\\t\\t\\tplayers[playerAddresses[i]].role = Role.Mafia;\\n\\t\\t\\t\\tmafiaAddresses.push(playerAddresses[i]);\\n\\t\\t\\t} else if (i == mafiaNum) {\\n\\t\\t\\t\\tplayers[playerAddresses[i]].role = Role.Doctor;\\n\\t\\t\\t} else if (i == mafiaNum + 1) {\\n\\t\\t\\t\\tplayers[playerAddresses[i]].role = Role.Detective;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tplayers[playerAddresses[i]].role = Role.Townsperson;\\n\\t\\t\\t}\\n\\t\\t\\temit RoleAssigned(\\n\\t\\t\\t\\tplayerAddresses[i],\\n\\t\\t\\t\\tplayers[playerAddresses[i]].role\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\tphaseStartTime = block.timestamp;\\n\\t}\\n\\n\\tfunction nextPhase() public onlyMayor {\\n\\t\\trequire(gameStarted, \\\"The game has not started yet\\\");\\n\\n\\t\\tif (currentPhase == Phase.Night) {\\n\\t\\t\\tcurrentPhase = Phase.Day;\\n\\t\\t} else {\\n\\t\\t\\tcurrentPhase = Phase.Night;\\n\\t\\t\\tresetAccusationsAndVotes();\\n\\t\\t\\tresetVotingStatus(); // Reset voting status for the new phase\\n\\t\\t}\\n\\t\\tphaseStartTime = block.timestamp;\\n\\t\\tcycleCount++; // Increment cycleCount on each phase change\\n\\t\\ttarget = address(0);\\n\\t\\tsaved = address(0);\\n\\t\\tinvestigated = address(0);\\n\\t\\tvotesCast = 0; // Reset the vote count\\n\\t\\taccusationsCount = 0; // Reset the accusations count\\n\\t\\temit PhaseChanged(currentPhase, story);\\n\\t}\\n\\n\\tfunction resetVotingStatus() internal {\\n\\t\\tfor (uint i = 0; i < playerAddresses.length; i++) {\\n\\t\\t\\thasVoted[playerAddresses[i]] = false; // Reset the hasVoted status\\n\\t\\t}\\n\\t}\\n\\n\\tfunction resetAccusationsAndVotes() internal {\\n\\t\\tfor (uint i = 0; i < playerAddresses.length; i++) {\\n\\t\\t\\taccusations[playerAddresses[i]] = address(0);\\n\\t\\t\\tvotes[playerAddresses[i]] = 0; // Reset the votes\\n\\t\\t}\\n\\t\\tdelete accusedPlayers;\\n\\t}\\n\\n\\tfunction accusePlayer(\\n\\t\\taddress _accused,\\n\\t\\tstring memory _reason\\n\\t) public onlyAlive {\\n\\t\\trequire(currentPhase == Phase.Day, \\\"Can only accuse during day phase\\\");\\n\\t\\trequire(\\n\\t\\t\\taccusations[msg.sender] == address(0),\\n\\t\\t\\t\\\"You have already accused a player\\\"\\n\\t\\t);\\n\\n\\t\\taccusations[msg.sender] = _accused;\\n\\t\\taccusationReasons[_accused].push(_reason); // Store the reason\\n\\t\\taccusedPlayers.push(_accused);\\n\\t\\taccusationsCount++;\\n\\t\\temit PlayerAccused(msg.sender, _accused);\\n\\n\\t\\tif (accusationsCount == playerCount) {\\n\\t\\t\\temit AccusationCompleted();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getAccusationReasons(\\n\\t\\taddress _accused\\n\\t) public view returns (string[] memory) {\\n\\t\\treturn accusationReasons[_accused];\\n\\t}\\n\\n\\tfunction voteForElimination(address _accused) public onlyAlive {\\n\\t\\trequire(currentPhase == Phase.Day, \\\"Can only vote during day phase\\\");\\n\\t\\trequire(\\n\\t\\t\\taccusations[_accused] != address(0),\\n\\t\\t\\t\\\"Player must be accused first\\\"\\n\\t\\t);\\n\\t\\trequire(!hasVoted[msg.sender], \\\"You have already voted\\\"); // Ensure player hasn't voted\\n\\n\\t\\tvotes[_accused]++;\\n\\t\\tvotesCast++; // Increase the number of votes cast\\n\\t\\thasVoted[msg.sender] = true; // Mark the player as having voted\\n\\t\\temit VoteCast(msg.sender, _accused);\\n\\n\\t\\tif (votesCast == playerCount) {\\n\\t\\t\\t// Check if all players have voted\\n\\t\\t\\taddress eliminatedPlayer = determineEliminatedPlayer();\\n\\t\\t\\tplayerToEliminate = eliminatedPlayer;\\n\\t\\t\\tvotingCompleted = true;\\n\\t\\t\\temit VotingCompleted(eliminatedPlayer);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction determineEliminatedPlayer() internal view returns (address) {\\n\\t\\taddress eliminatedPlayer;\\n\\t\\tuint highestVotes = 0;\\n\\t\\tfor (uint i = 0; i < accusedPlayers.length; i++) {\\n\\t\\t\\tif (votes[accusedPlayers[i]] > highestVotes) {\\n\\t\\t\\t\\thighestVotes = votes[accusedPlayers[i]];\\n\\t\\t\\t\\teliminatedPlayer = accusedPlayers[i];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn eliminatedPlayer;\\n\\t}\\n\\n\\tfunction eliminatePlayer() public onlyMayor {\\n\\t\\trequire(playerToEliminate != address(0), \\\"Eliminated must be a player\\\");\\n\\t\\tplayers[playerToEliminate].alive = false;\\n\\t\\tplayerCount--;\\n\\t\\temit PlayerEliminated(playerToEliminate);\\n\\t}\\n\\n\\tfunction checkWin() public {\\n\\t\\tuint aliveMafia = 0;\\n\\t\\tuint aliveTownspeople = 0;\\n\\t\\tfor (uint i = 0; i < playerAddresses.length; i++) {\\n\\t\\t\\tif (players[playerAddresses[i]].alive) {\\n\\t\\t\\t\\tif (players[playerAddresses[i]].role == Role.Mafia) {\\n\\t\\t\\t\\t\\taliveMafia++;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\taliveTownspeople++;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (aliveMafia == 0) {\\n\\t\\t\\temit GameWon(\\\"Townspeople win!\\\");\\n\\t\\t} else if (aliveMafia >= aliveTownspeople) {\\n\\t\\t\\temit GameWon(\\\"Mafia wins!\\\");\\n\\t\\t} else {\\n\\t\\t\\temit GameContinue();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction resetGame() private onlyMayor {\\n\\t\\tfor (uint i = 0; i < playerAddresses.length; i++) {\\n\\t\\t\\tdelete players[playerAddresses[i]];\\n\\t\\t\\tdelete accusations[playerAddresses[i]];\\n\\t\\t\\tdelete votes[playerAddresses[i]];\\n\\t\\t}\\n\\t\\tdelete playerAddresses;\\n\\t\\tdelete accusedPlayers;\\n\\t\\tdelete mafiaAddresses;\\n\\n\\t\\tplayerCount = 0;\\n\\t\\tmafiaCount = 0;\\n\\t\\tphaseStartTime = block.timestamp;\\n\\t\\tcurrentPhase = Phase.Night;\\n\\t\\tgameStarted = false;\\n\\t\\tvotingCompleted = false;\\n\\t\\tvotesCast = 0;\\n\\t\\taccusationsCount = 0;\\n\\t\\tplayerToEliminate = address(0);\\n\\t\\ttarget = address(0);\\n\\t\\tsaved = address(0);\\n\\t\\tinvestigated = address(0);\\n\\t\\tstory = \\\"\\\";\\n\\t\\tcycleCount = 0; // Reset cycleCount on game reset\\n\\n\\t\\temit PhaseChanged(currentPhase, story);\\n\\t}\\n\\n\\tfunction getPlayers() public view returns (address[] memory) {\\n\\t\\treturn playerAddresses;\\n\\t}\\n\\n\\tfunction getAccusedPlayers() public view returns (address[] memory) {\\n\\t\\treturn accusedPlayers;\\n\\t}\\n\\n\\tfunction getEliminatedPlayers() public view returns (address[] memory) {\\n\\t\\treturn eliminatedAddresses;\\n\\t}\\n}\\n\",\"keccak256\":\"0xd63935de4efcfee7f0cb9f05572312e9dcf91c87ad8f73fe74d175b28a4ed27d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 20,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "playerCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 22,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "mafiaCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 24,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "phaseStartTime",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 26,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "cycleCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 29,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "currentPhase",
        "offset": 0,
        "slot": "4",
        "type": "t_enum(Phase)18"
      },
      {
        "astId": 34,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "players",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(Player)15_storage)"
      },
      {
        "astId": 38,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "accusations",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 42,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "votes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 46,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "hasVoted",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 51,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "accusationReasons",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 54,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "accusedPlayers",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 57,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "playerAddresses",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 60,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "mafiaAddresses",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "eliminatedAddresses",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "mayor",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 67,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "target",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 69,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "saved",
        "offset": 0,
        "slot": "16",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "investigated",
        "offset": 0,
        "slot": "17",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "story",
        "offset": 0,
        "slot": "18",
        "type": "t_string_storage"
      },
      {
        "astId": 75,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "gameStarted",
        "offset": 0,
        "slot": "19",
        "type": "t_bool"
      },
      {
        "astId": 77,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "votingCompleted",
        "offset": 1,
        "slot": "19",
        "type": "t_bool"
      },
      {
        "astId": 79,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "votesCast",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 81,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "playerToEliminate",
        "offset": 0,
        "slot": "21",
        "type": "t_address"
      },
      {
        "astId": 83,
        "contract": "contracts/MafiaGame.sol:MafiaGame",
        "label": "accusationsCount",
        "offset": 0,
        "slot": "22",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(Phase)18": {
        "encoding": "inplace",
        "label": "enum MafiaGame.Phase",
        "numberOfBytes": "1"
      },
      "t_enum(Role)7": {
        "encoding": "inplace",
        "label": "enum MafiaGame.Role",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Player)15_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MafiaGame.Player)",
        "numberOfBytes": "32",
        "value": "t_struct(Player)15_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Player)15_storage": {
        "encoding": "inplace",
        "label": "struct MafiaGame.Player",
        "members": [
          {
            "astId": 9,
            "contract": "contracts/MafiaGame.sol:MafiaGame",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12,
            "contract": "contracts/MafiaGame.sol:MafiaGame",
            "label": "role",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(Role)7"
          },
          {
            "astId": 14,
            "contract": "contracts/MafiaGame.sol:MafiaGame",
            "label": "alive",
            "offset": 21,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}